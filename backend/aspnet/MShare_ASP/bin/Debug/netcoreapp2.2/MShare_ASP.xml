<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MShare_ASP</name>
    </assembly>
    <members>
        <member name="T:MShare_ASP.API.Request.LoginCredentials">
            <summary>
            Identifies the user
            </summary>
        </member>
        <member name="P:MShare_ASP.API.Request.LoginCredentials.Email">
            <summary>
            Email that the user registered with
            </summary>
        </member>
        <member name="P:MShare_ASP.API.Request.LoginCredentials.Password">
            <summary>
            Unhashed password
            </summary>
        </member>
        <member name="T:MShare_ASP.API.Request.LoginCredentialsValidator">
            <summary>
            Validator object for LoginCredentials data class
            </summary>
        </member>
        <member name="M:MShare_ASP.API.Request.LoginCredentialsValidator.#ctor">
            <summary>
            Initializese the validator object
            </summary>
        </member>
        <member name="T:MShare_ASP.API.Request.NewUser">
            <summary>
            Represents a new user to be registered
            </summary>
        </member>
        <member name="P:MShare_ASP.API.Request.NewUser.Email">
            <summary>
            Email of the user as in SMTP standard
            </summary>
        </member>
        <member name="P:MShare_ASP.API.Request.NewUser.DisplayName">
            <summary>
            Name to be displayed
            </summary>
        </member>
        <member name="P:MShare_ASP.API.Request.NewUser.Password">
            <summary>
            Unhashed password
            </summary>
        </member>
        <member name="T:MShare_ASP.API.Request.NewUserValidator">
            <summary>
            Validator object for NewUser data class
            </summary>
        </member>
        <member name="M:MShare_ASP.API.Request.NewUserValidator.#ctor">
            <summary>
            Initializese the validator object
            </summary>
        </member>
        <member name="T:MShare_ASP.API.Response.JWTToken">
            <summary>
            Encapsulates a JWT token https://jwt.io
            </summary>
        </member>
        <member name="P:MShare_ASP.API.Response.JWTToken.Token">
            <summary>
            String representation of the token
            </summary>
        </member>
        <member name="T:MShare_ASP.API.Response.UserData">
            <summary>
            Describes the user' data
            </summary>
        </member>
        <member name="P:MShare_ASP.API.Response.UserData.DisplayName">
            <summary>
            Max 32 length name of the user
            </summary>
        </member>
        <member name="T:MShare_ASP.Configurations.IEmailConfiguration">
            <summary>
            Configurations for an email account
            </summary>
        </member>
        <member name="P:MShare_ASP.Configurations.IEmailConfiguration.Name">
            <summary>
            Name of the account (e.g. Mshare Noreply)
            </summary>
        </member>
        <member name="P:MShare_ASP.Configurations.IEmailConfiguration.Address">
            <summary>
            Email Address of the account (e.g. noreply.mshare@gmail.com)
            </summary>
        </member>
        <member name="P:MShare_ASP.Configurations.IEmailConfiguration.Password">
            <summary>
            Password for the email address
            </summary>
        </member>
        <member name="P:MShare_ASP.Configurations.IEmailConfiguration.SmtpAddress">
            <summary>
            Address of the SMTP server
            </summary>
        </member>
        <member name="P:MShare_ASP.Configurations.IEmailConfiguration.SmtpPort">
            <summary>
            Port used with SMTP server
            </summary>
        </member>
        <member name="T:MShare_ASP.Configurations.IJWTConfiguration">
            <summary>
            Configuration for JWT token generation and validation
            </summary>
        </member>
        <member name="P:MShare_ASP.Configurations.IJWTConfiguration.SecretKey">
            <summary>
            Secret key to encode tokens with
            </summary>
        </member>
        <member name="T:MShare_ASP.Configurations.IURIConfiguration">
            <summary>
            URI related configurations go here
            </summary>
        </member>
        <member name="P:MShare_ASP.Configurations.IURIConfiguration.URIForEndUsers">
            <summary>
            URI that the end user sees (like in an email)
            </summary>
        </member>
        <member name="T:MShare_ASP.Controllers.AuthController">
            <summary>
            Authentication controller responseible for logging users in and registering new users.
            </summary>
        </member>
        <member name="M:MShare_ASP.Controllers.AuthController.#ctor(MShare_ASP.Services.IAuthService,MShare_ASP.Services.IMshareService)">
            <summary>
            Initializes the AuthController
            </summary>
            <param name="authService"></param>
            <param name="mshareService"></param>
        </member>
        <member name="M:MShare_ASP.Controllers.AuthController.Get">
            <summary>
            Lists all users (use only for testing)
            </summary>
            <response code="200">Successfully returned all users</response>
        </member>
        <member name="M:MShare_ASP.Controllers.AuthController.Register(MShare_ASP.API.Request.NewUser)">
            <summary>
            Register a new user
            </summary>
            <param name="newUser">The new user to be created</param>
            <response code="201">User successfully created</response>
            <response code="401">Registration failed</response>
        </member>
        <member name="M:MShare_ASP.Controllers.AuthController.Validate(System.String)">
            <summary>
            Validate a new registration's email
            </summary>
            <param name="token">registration token</param>
            <response code="200">Validation successful</response>
            <response code="403">Validation failed</response>
        </member>
        <member name="M:MShare_ASP.Controllers.AuthController.Login(MShare_ASP.API.Request.LoginCredentials)">
            <summary>
            Log a user in
            </summary>
            <remarks>Can be called multiple times, always returns a valid JWT!</remarks>
            <param name="loginCred">Credentials of the user</param>
            <response code="200">Successful login</response>
            <response code="401">Login failed</response>
        </member>
        <member name="T:MShare_ASP.Controllers.BaseController">
            <summary>
            Every custom controller should inherit from this BaseController
            NOTE! Do not confuse this with `ControllerBase`
            </summary>
        </member>
        <member name="P:MShare_ASP.Controllers.BaseController.Service">
            <summary>
            Common Service usable for each controller that inherits from us
            </summary>
        </member>
        <member name="M:MShare_ASP.Controllers.BaseController.#ctor(MShare_ASP.Services.IMshareService)">
            <summary>
            Initializes a BaseController
            </summary>
            <param name="mshareService"></param>
        </member>
        <member name="M:MShare_ASP.Controllers.BaseController.GetCurrentUserID">
            <summary>
            Current user's id
            </summary>
            <returns>The JTW authenticated user's ID</returns>
            <exception cref="T:System.InvalidOperationException">When called without an [Authorize(AuthenticationSchemes = JwtBearerDefaults.AuthenticationScheme)] tagged context</exception>
        </member>
        <member name="T:MShare_ASP.Controllers.ProfileController">
            <summary>
            Profile controller contains information the currently logged in active user
            </summary>
        </member>
        <member name="M:MShare_ASP.Controllers.ProfileController.#ctor(MShare_ASP.Services.IMshareService)">
            <summary>
            Initializes the ProfileController 
            </summary>
            <param name="mshareService"></param>
        </member>
        <member name="M:MShare_ASP.Controllers.ProfileController.Get">
            <summary>
            Gets the current signed in user
            </summary>
            <response code="200">Returns with the user's profile data</response>
        </member>
        <member name="T:MShare_ASP.Data.DaoEmailToken">
            <summary>
            Data Access Object for EmailToken
            </summary>
        </member>
        <member name="T:MShare_ASP.Data.DaoEmailToken.Type">
            <summary>
            Determines the type of an email
            </summary>
        </member>
        <member name="F:MShare_ASP.Data.DaoEmailToken.Type.Password">
            <summary>
            Used for password related (e.g. forgotten password) emails
            </summary>
        </member>
        <member name="F:MShare_ASP.Data.DaoEmailToken.Type.Validation">
            <summary>
            Used for email validation (when registering)
            </summary>
        </member>
        <member name="P:MShare_ASP.Data.DaoEmailToken.user_id">
            <summary>
            Foreign key to the user
            </summary>
        </member>
        <member name="P:MShare_ASP.Data.DaoEmailToken.token">
            <summary>
            Primary key of the emailtoken
            </summary>
        </member>
        <member name="P:MShare_ASP.Data.DaoEmailToken.expiration_date">
            <summary>
            Date and time of expiration
            </summary>
        </member>
        <member name="P:MShare_ASP.Data.DaoEmailToken.token_type">
            <summary>
            Type of token
            </summary>
        </member>
        <member name="P:MShare_ASP.Data.DaoEmailToken.User">
            <summary>
            The user associated with this EmailToken
            </summary>
        </member>
        <member name="T:MShare_ASP.Data.DaoUser">
            <summary>
            Data Access Object for User
            </summary>
        </member>
        <member name="P:MShare_ASP.Data.DaoUser.id">
            <summary>
            Primary key of the user
            </summary>
        </member>
        <member name="P:MShare_ASP.Data.DaoUser.email">
            <summary>
            Email of the user
            </summary>
        </member>
        <member name="P:MShare_ASP.Data.DaoUser.password">
            <summary>
            Hashed password of the user
            </summary>
        </member>
        <member name="P:MShare_ASP.Data.DaoUser.display_name">
            <summary>
            Displayname (not unique!)
            </summary>
        </member>
        <member name="P:MShare_ASP.Data.DaoUser.creation_date">
            <summary>
            Date and time when the user was registered
            </summary>
        </member>
        <member name="P:MShare_ASP.Data.DaoUser.email_tokens">
            <summary>
            All email tokens associated with user
            </summary>
        </member>
        <member name="T:MShare_ASP.Services.IAuthService">
            <summary>
            Authentication related services
            </summary>
        </member>
        <member name="M:MShare_ASP.Services.IAuthService.Login(MShare_ASP.API.Request.LoginCredentials)">
            <summary>
            Checks the credentials of the user and signs him in.
            </summary>
            <param name="credentials">Credentials to check</param>
            <returns>Valid JWT or null</returns>
        </member>
        <member name="M:MShare_ASP.Services.IAuthService.Register(MShare_ASP.API.Request.NewUser)">
            <summary>
            Registers a new user to the database, checks for duplication
            </summary>
            <param name="newUser">The new user data to register</param>
            <returns>true if registration successful</returns>
        </member>
        <member name="M:MShare_ASP.Services.IAuthService.Validate(System.String)">
            <summary>
            Validates an email token for registration and updates user state
            </summary>
            <param name="token">Token to validate</param>
            <returns>true if validation successful</returns>
        </member>
        <member name="T:MShare_ASP.Services.IMshareService">
            <summary>
            General service for Mshare Application
            </summary>
        </member>
        <member name="P:MShare_ASP.Services.IMshareService.Users">
            <summary>
            Gets all users
            </summary>
        </member>
        <member name="M:MShare_ASP.Services.IMshareService.GetUser(System.Int64)">
            <summary>
            Gets a specific user
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>
